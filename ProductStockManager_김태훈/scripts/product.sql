CREATE TABLE PRODUCT_IO (
    IO_NUM NUMBER CONSTRAINT pk_num PRIMARY KEY,
    PRODUCT_ID VARCHAR(20),
    IO_DATE DATE DEFAULT SYSDATE CONSTRAINT nn_date NOT NULL ,
    AMOUNT NUMBER CONSTRAINT nn_amount NOT NULL,
    STATUS VARCHAR(10) CONSTRAINT ck_status CHECK(STATUS IN ('입고', '출고')),
    CONSTRAINT fk_pid FOREIGN KEY(PRODUCT_ID) 
    REFERENCES PRODUCT_STOCK(PRODUCT_ID) ON DELETE CASCADE
);

CREATE SEQUENCE SEQ_IONUM;
DROP SEQUENCE SEQ_IONUM;

DROP TABLE PRODUCT_IO;

CREATE OR REPLACE TRIGGER TRG_PRODUCT AFTER
    INSERT ON PRODUCT_IO
    FOR EACH ROW
BEGIN
    IF :NEW.STATUS = '입고'
    THEN
        UPDATE PRODUCT_STOCK
        SET STOCK = STOCK + :NEW.AMOUNT
        WHERE PRODUCT_ID = :NEW.PRODUCT_ID;
    END IF;
    
    IF :NEW.STATUS = '출고'
    THEN
        UPDATE PRODUCT_STOCK
        SET STOCK = STOCK - :NEW.AMOUNT
        WHERE PRODUCT_ID = :NEW.PRODUCT_ID;
    END IF;
END;
/

INSERT INTO PRODUCT_IO VALUES (SEQ_IONUM.NEXTVAL, 'nb_ss7', '19/07/01', 30, '입고');
INSERT INTO PRODUCT_IO VALUES (SEQ_IONUM.NEXTVAL, 'nb_ss7', '19/07/02', 3, '출고');
INSERT INTO PRODUCT_IO VALUES (SEQ_IONUM.NEXTVAL, 'pc_ibm', '19/07/02', 10, '입고');

COMMIT;

SELECT * FROM PRODUCT_IO;

GRANT CREATE VIEW TO STUDENT;

CREATE OR REPLACE VIEW PRODUCT_VIEW
    AS
    SELECT
        A.IO_NUM
        , A.PRODUCT_ID
        , B.P_NAME
        , A.IO_DATE
        , A.AMOUNT
        , A.STATUS
    FROM PRODUCT_IO A
    JOIN PRODUCT_STOCK B ON A.PRODUCT_ID = B.PRODUCT_ID;